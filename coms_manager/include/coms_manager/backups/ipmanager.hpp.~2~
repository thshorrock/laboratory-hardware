#include <iostream>

#include <boost/bind.hpp>
#include <boost/optional.hpp>
#include <boost/lambda/bind.hpp>
#include <boost/array.hpp>
#include <boost/asio.hpp>
#include <boost/date_time/posix_time/posix_time.hpp>
#include <string>

namespace ICR{

  class IPmanager
  {
    boost::asio::io_service m_io_service;
    boost::asio::ip::tcp::socket m_socket;
    boost::system::error_code m_error;

    static
    void set_result(boost::optional<boost::system::error_code>* a, boost::system::error_code b) 
    { 
      *a = b; 
    } 
  public:
    IPmanager(const std::string& address, const std::string& port = "http");
    
    virtual ~IPmanager();
    
    void send(const std::string& cmd);
    std::string recv(const std::string& cmd, const unsigned int& buffsize = 128) ;
    std::string timed_recv(const std::string& cmd, const unsigned int& buffsize = 128, const double& seconds = 5) ;

  };


}
